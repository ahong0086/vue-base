// @import './theming';

/* Variables */
$nav-pad-top: 0.8rem;
$nav-pad-btm: 0.6rem;
$nav-height: 1.8rem;
$nav-height-total: $nav-pad-top + $nav-pad-btm + $nav-height;

@mixin navHeight($property, $has-nav: true) {
    @if $has-nav == true {
        #{$property}: $nav-height-total;
        #{$property}: calc(#{$nav-height-total} + constant(safe-area-inset-top));
        #{$property}: calc(#{$nav-height-total} + env(safe-area-inset-top));
    }
    @else {
        #{$property}: constant(safe-area-inset-top);
        #{$property}: env(safe-area-inset-top);
    }
}

@mixin simpleNavHeight($property) {
    #{$property}: $nav-height-total;
}

@mixin safeTopHeight($property) {
    #{$property}: constant(safe-area-inset-top);
    #{$property}: env(safe-area-inset-top);
}



$tabs-height:0;

@mixin tabsHeight($property, $has-tab: true) {
    @if $has-tab == true {
        #{$property}: $tabs-height;
        #{$property}: calc(#{$tabs-height} + constant(safe-area-inset-bottom));
        #{$property}: calc(#{$tabs-height} + env(safe-area-inset-bottom));
    }
    @else {
        #{$property}:  constant(safe-area-inset-bottom);
        #{$property}: env(safe-area-inset-bottom);
    }
}

@mixin simpleTabsHeight($property) {
    #{$property}: $tabs-height;
}

@mixin safeBottomHeight($property) {
    #{$property}:  constant(safe-area-inset-bottom);
        #{$property}: env(safe-area-inset-bottom);
}

.iconfont {
    font-family:"iconfont" !important;
    font-style:normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/*
Example:
html {
    @include fluid-type(font-size, 320px, 1366px, 14px, 18px);
}
    
h1 {
    @include fluid-type(padding-bottom padding-top, 20em, 70em, 2em, 4em);
}    
*/
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
    @each $property in $properties {
        #{$property}: $min-value;
    }
    
    @media (min-width: $min-vw) {
        @each $property in $properties {
            #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
        }
    }
    
    @media (min-width: $max-vw) {
        @each $property in $properties {
            #{$property}: $max-value;
        }
    }
}
    
@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    
    @return $number;
}

// https://codepen.io/MadeByMike/pen/vNrvdZ
@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {
    & {
        @each $property in $properties {
            #{$property}: $min-value;
        }

        @media screen and (min-width: $min-screen) {
            @each $property in $properties {
                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value); 
            }
        }

        @media screen and (min-width: $max-screen) {
            @each $property in $properties {
                #{$property}: $max-value;
            }
        }
    }
}

// Requires the calc-interpolation function which can also be used independently

@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {
    $a: ($max-value - $min-value) / ($max-screen - $min-screen);
    $b: $min-value - $a * $min-screen; 

    $sign: "+";
    @if ($b < 0) {
        $sign: "-";
        $b: abs($b);
    }
    @return calc(#{$a*100}vw #{$sign} #{$b});
}

// Indrek Pass also has a fantastic mixin here: http://sassmeister.com/gist/7f22e44ace49b5124eec
/* 
Single property
html {
    @include interpolate(font-size, 320px, 1366px, 14px, 20px);
}

Multiple properties with same values
h1,h2,h3,h4,h5 {
    @include interpolate((padding-top, padding-bottom), 20rem, 70rem, 0rem, .5rem);
}
*/


@mixin header-font {
    //@include interpolate(font-size, 320px, 420px, 15px, 19px);
    font-size: 1.25rem;
}

.tap-active {
   
    transition: none !important;
    // @include themify() {
    //     &:active {
    //         position: relative;
    //         overflow: hidden;
    //         &:after {
    //             content: '';
    //             position: absolute;
    //             left: 0; top: 0;
    //             width: 100%; height: 100%;
    //             background: themed('c-tap');
    //         }
            
    //     }
    // }
}

.tap-active-basic {
   
    transition: none !important;
    // @include themify() {
    //     &:active {
    //         background: themed('c-tap');
    //     }
    // }
}
